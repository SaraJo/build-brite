{
  "name": "compulsive",
  "description": "Time based event loop process queue",
  "version": "0.3.1",
  "homepage": "https://github.com/rwldrn/compulsive",
  "author": {
    "name": "Rick Waldron",
    "email": "waldron.rick@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/rwldrn/compulsive.git"
  },
  "bugs": {
    "url": "https://github.com/rwldrn/compulsive/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/rwldrn/compulsive/blob/master/LICENSE-MIT"
    }
  ],
  "main": "lib/compulsive",
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {},
  "devDependencies": {
    "grunt": "~0.3.9"
  },
  "keywords": [],
  "readme": "# compulsive\n\nTime based event loop process queue\n\n## Getting Started\nInstall the module with: `npm install compulsive`\n\n\n## Documentation\n\n\n### compulsive.wait( ms, callback )\n\nWait `ms`, execute `callback`.\n\n\n\n### compulsive.loop( ms, callback )\n\nLoop `ms`, execute `callback`.\n\n\n### compulsive.repeat( count, ms, callback )\n\nRepeat `count` times, every `ms`, execute `callback`.\n\n\n### compulsive.queue( list )\n\nQueue tasks.\n\n```js\n// list\n[\n  {\n    wait: ms,\n    task: function() {}\n  }\n  ...\n]\n```\n\n\n\n## Examples\n\n```js\nvar compulsive = require(\"compulsive\");\n\n\ncompulsive.wait( 10, function() {\n\n  // Will execute in 10ms\n  // ... doesn't use setTimeout.\n\n});\n\ncompulsive.loop( 50, function( control ) {\n\n  // Will execute every 50ms\n  // ... doesn't use setTimeout or setInterval.\n\n\n  // The loop can be stopped via:\n  control.stop();\n});\n\ncompulsive.repeat( 5, 100, function( control ) {\n\n  // Will execute 5 times, every 100ms\n  // ... doesn't use setTimeout or setInterval.\n\n\n  // The repeater loop can be stopped via:\n  control.stop();\n});\n\n\ncompulsive.queue([\n  {\n    wait: 100,\n    task: function() {\n      // 100 from call to execution\n    }\n  },\n  {\n    wait: 200,\n    task: function() {\n      // 100 + 200 = 300ms from call to execution\n    }\n  }\n]);\n\n\n```\n\n\nAdd compulsive api to your constructor's prototype:\n\n```js\nvar compulsive = require(\"compulsive\"),\n    priv = new require(\"es6-collections\").WeakMap();\n\nfunction Nodebot() {\n  //... various nodebot constructor tasks\n\n  this.servos = {\n    right: new Servo(9),\n    left: new Servo(10)\n  };\n\n  priv.set( this, {\n    step: null\n  });\n}\n\n// Exposure grants the end dev control\n// over stepping positions (0-180Ëš)\nNodebot.STEPS = {\n  // Step: [ R, L ]\n  right: { right: 120, left: 60 },\n  left:  { right: 60, left: 120 }\n};\n\n// Augment the Nodebot prototype\n// with compulsive APIs\n[ \"wait\", \"loop\", \"queue\" ].forEach(function( api ) {\n  Nodebot.prototype[ api ] = compulsive[ api ];\n});\n\nNodebot.prototype.step = function() {\n  var p, next, last, degrees;\n\n  p = priv.get(this);\n  last = p.step;\n\n  next = last === \"right\" ? \"left\" : \"right\";\n  degrees = Nodebot.STEPS[ next ];\n\n\n  Object.keys( this.servos ).forEach(function( servo ) {\n    servo.move( degrees[ servo ] );\n  });\n};\n\nNodebot.prototype.walk = function() {\n  this.loop( 1000, this.step.bind(this) );\n};\n\n\nmodule.exports = Nodebot;\n\n```\n\n```js\nvar Nodebot = require(\"nodebot\"), ,\n    bot = new Nodebot();\n\n\nbot.walk();\n\n```\n\n\n\n\n## Contributing\nAll contributions must adhere to the the [Idiomatic.js Style Guide](https://github.com/rwldrn/idiomatic.js),\nby maintaining the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt](https://github.com/cowboy/grunt).\n\n## License\nCopyright (c) 2012 Rick Waldron <waldron.rick@gmail.com>\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "compulsive@0.3.1",
  "dist": {
    "shasum": "0a1c6941ce99a85fd2891728e43d9e264bfe26b0"
  },
  "_from": "compulsive@latest",
  "_resolved": "https://registry.npmjs.org/compulsive/-/compulsive-0.2.3.tgz"
}
